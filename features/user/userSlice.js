const createSlice=require('@reduxjs/toolkit').createSlice
const createAsyncThunk=require('@reduxjs/toolkit').createAsyncThunk
const axios = require('axios')

const userInitialState ={
    loading:false,
    users:[],
    error:''
}


//createAsyncThunk automatically creates Fulfilled, Pending, Rejected action types.
const fetchUser = createAsyncThunk('user/fetchUsers',()=>{
    // console.log("hi")
  return axios.get("https://jsonplaceholder.typicode.com/users")
  .then(Res=>{
     const userArr=Res.data.map(user=>user.name)
     return userArr
    })
    
})


//these above reducers are not generated by slice and though need to be added as extraReducers
const userSlice=createSlice({
    name:'user',
    initialState:userInitialState,
    extraReducers:builder=>{
        builder.addCase(fetchUser.pending,state=>{
            state.loading=true;
        })
        builder.addCase(fetchUser.fulfilled,(state,action)=>{
            state.loading=false;
            state.users=action.payload;
            state.error='';
            //console.log(action.payload)
        })
        builder.addCase(fetchUser.rejected,(state,action)=>{
            state.loading=false;
            state.users=[];
            state.error=action.payload.message;
        })
    }
    
})

module.exports= userSlice.reducer
module.exports.fetchUser = fetchUser